buildscript {
    repositories {
        mavenCentral()
    }

}
apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    jcenter()

    maven {
        url "https://raw.github.com/embarkmobile/zxing-android-minimal/mvn-repo/maven-repository/"
    }
}

android {
    defaultConfig {
        applicationId "me.smartproxy"
        minSdkVersion 14
        targetSdkVersion 23
        versionName 'lolipop_bate'
        ndk {
            moduleName "encryptor"
            ldLibs 'log'
            stl 'gnustl_shared'
        }
        externalNativeBuild {
            ndkBuild {
                cppFlags '-std=c++11'
                cppFlags "-fexceptions"
                cppFlags " -I${file("src/main/jni/prebuilts/include")}".toString()
            }
        }
    }
    /*
       signingConfigs {
       create("release") {
       storeFile = file("[android.keystore]")
       storePassword =  System.getenv("KSTOREPWD")
       keyAlias = "[smartproxy]"
       keyPassword = System.getenv("KEYPWD")
       }
       }
     */
    compileSdkVersion 23
    buildToolsVersion '25.0.1'
    productFlavors {
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = []
    }
}

/*android.sources {
  main {
  jni {
  source {
  srcDirs.removeAll()
  srcDirs.add('src/main/none')
  }
  }
  jniLibs {
  source {
  srcDirs.add('src/main/libs')
  }
  }
  }
  }*/


android.buildTypes {
    release {
        shrinkResources = true
        useProguard = true
        //proguardFiles.add(getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        //signingConfigs = signingConfigs.release
    }
}

task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
    def ndkDir = android.ndkDirectory
    commandLine "$ndkDir/ndk-build", '-C', file('src/main/jni').absolutePath
}

task cleanNative(type: Exec, description: 'Clean JNI object files') {
    def ndkDir = android.ndkDirectory
    commandLine "$ndkDir/ndk-build", '-C', file('src/main/jni').absolutePath, 'clean'
}

clean.dependsOn 'cleanNative'

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn buildNative
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.embarkmobile:zxing-android-minimal:2.0.0@aar'
    compile 'com.embarkmobile:zxing-android-integration:2.0.0@aar'
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.google.zxing:core:3.0.1'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
}
